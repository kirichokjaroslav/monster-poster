#!/usr/bin/env bash
# -*- coding: utf-8 -*-

ROOT="$( command cd "$( dirname "${BASH_SOURCE[0]}" )" && pwd )"

BIN=$ROOT/bin
SRC=$ROOT/src

PYTHON_MINOR_VERSION=7
PYTHON=`which python3.$PYTHON_MINOR_VERSION`
PYENV_NAME=.pyenv
PYENV=$ROOT/$PYENV_NAME

# Ð¡olors for better text readability
YELLOW_COLOR=`tput setaf 3`
RESET_COLOR=`tput sgr0`

# Create the actual virtualenv
if [ ! -d $PYENV ]; then
    read -r -p "Virtual environment \"$PYENV\" not found. Would you like to create it? (recommended)? [y/n] " response
    if [[ "$response" =~ ^([yY][eE][sS]|[yY])$ ]]; then
        echo "${YELLOW_COLOR}...Creating virtual env...${RESET_COLOR}"
        virtualenv --python=python3.$PYTHON_MINOR_VERSION $PYENV --no-site-packages
    fi
fi

# Add to path only if absent
echo $PYTHONPATH | grep -q $SRC \
    || export PYTHONPATH=$SRC:$PYTHONPATH
echo $PATH | grep -q $BIN \
    || export PATH=$BIN:$PATH

if [ "$VIRTUAL_ENV" != "$PYENV" ]; then
  echo "${YELLOW_COLOR}...Switching to ${PYENV_NAME} environment...${RESET_COLOR}"
  which deactivate > /dev/null 2>&1 && deactivate
  source $PYENV/bin/activate

  # Let us know what our env is
  echo "Virtualenv at $PYENV"
  echo "Python     at `which python`"
  echo "Pip        at `which pip`"
fi